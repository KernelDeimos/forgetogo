{"version":3,"sources":["common/routing.js","common/base.js","common/comm.js","common/dyformik.js","common/tabs.js","screens/server.js","screens/config.js","app/App.js","reportWebVitals.js","index.js"],"names":["RouterState","path","this","Route","props","routerPath","rs","myPath","startsWith","matches","children","React","Component","newrs","s","BaseComponent","easyFetch","url","a","fetch","response","status","text","json","data","message","easyPost","payload","console","log","JSON","stringify","method","headers","body","DyformikForm","fields","map","v","normalizeField","initialValues","fieldsToInitials","onSubmit","isSubmitting","createForm","fieldToElem","flat","type","disabled","field","newField","undefined","initial","o","name","fieldToInitial","elem","min","step","pattern","htmlFor","label","TabContext","createContext","tabs","activeTab","Tab","id","TabProvider","state","addTab","bind","switchTab","noSwitch","setState","Provider","value","Tabs","class","Consumer","tabCtx","tab","cls","isActive","className","onClick","TabContentsView","find","ServerConsole","lines","scrolling","commandLine","consoleEndRef","createRef","init","updateScrollPosition","consoleSocket","close","curr","current","scrollIntoView","behaviour","warn","evt","t","target","scrollHeight","clientHeight","scrollTop","populateBuffer","initConsoleSocket","window","location","origin","uuid","error","result","alert","WebSocket","host","onmessage","split","preventDefault","cmd","cmdLine","onScroll","onConsoleScroll","line","ref","onCommandEntered","onChange","handleCommandLine","NoConfig","onCreateConfig","ErrorConfig","info","CreateConfig","dyf","values","getFormik","LaunchConfig","launchDisabled","stopDisabled","config","open","instance","Error","getOpenButton","getStopButton","getStartButton","launch","terminate","getControlsForInstance","ListConfigs","configPoller","configs","instances","loading","startConfigPoller","clearTimeout","setTimeout","error1","error2","App","doFetch","length","launcherConfigs","errorInfo","checkConfig","action","openConfigCreate","forceUpdateA","forceUpdateB","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30ea424f.chunk.js","sourcesContent":["import React from \"react\";\n\nexport class RouterState {\n    path = \"\"\n\n    constructor (path) {\n        this.path = path;\n    }\n}\n\nexport class Route extends React.Component {\n    constructor (props) {\n        super(props)\n    }\n    matches () {\n        let routerPath = this.props.rs.path;\n        let myPath = this.props.path;\n        return routerPath.startsWith(myPath);\n    }\n    render () {\n        return this.matches() ? (\n            this.props.children\n        ) : [];\n    }\n}","import React from \"react\";\nimport { RouterState } from \"./routing\";\n\nexport function newrs (s) {\n    return new RouterState(s);\n}\n\nexport class BaseComponent extends React.Component {\n    render () {\n        return []\n    }\n}","export async function easyFetch(url) {\n    try {\n        let response = await fetch(url);\n        if ( response.status !== 200 ) {\n            return ['error', [\n                'server responded with status: ' + response.status,\n                { url: url },\n                await response.text(),\n            ]];\n        }\n        let data = await response.json();\n        return [false, data];\n    } catch (e) {\n        return ['error', [\n            'an exception occurred during a request',\n            { url: url },\n            e.message\n        ]];\n    }\n}\n\nexport async function easyPost(url, payload) {\n    console.log('payload', JSON.stringify(payload))\n    try {\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(payload),\n        });\n        if ( response.status !== 200 ) {\n            return ['error', [\n                'server responded with status: ' + response.status,\n                { url: url },\n                await response.text(),\n            ]];\n        }\n        let data = await response.json();\n        return [false, data]\n    } catch (e) {\n        return ['error', [\n            'an exception occurred during a request',\n            { url: url },\n            e.message\n        ]]\n    }\n}","import { Form, Field, Formik } from \"formik\";\n\nexport class DyformikForm {\n    constructor (fields) {\n        this.fields = fields.map(v => this.normalizeField(v));\n    }\n\n    getFormik() {\n        return (\n            <Formik\n                initialValues={this.fieldsToInitials(this.fields)}\n                onSubmit={this.onSubmit}\n            >\n                {({ isSubmitting }) =>\n                    this.createForm(isSubmitting)}\n            </Formik>\n        );\n    }\n\n    // === internal use below here ===\n    createForm (isSubmitting) { return (\n        <Form>\n            {\n                this.fields.map(v => this.fieldToElem(v)).flat()\n            }\n            <div></div>\n            <button type=\"submit\" disabled={isSubmitting}>\n                Submit\n            </button>\n        </Form>\n    );}\n\n    // The following are really functions, not methods\n    normalizeField (field) {\n        let newField = { ...field };\n        if ( ! newField.type ) {\n            newField.type = 'text';\n        }\n        return newField;\n    }\n    fieldToInitial (field) {\n        const defaultInitials = {\n            'text': '',\n            'hidden': '',\n            'integer': 1,\n            'checkbox': true,\n        };\n        let v = defaultInitials[field.type];\n        if ( v === undefined ) v = '';\n        if ( field.initial !== undefined ) {\n            v = field.initial;\n        }\n        return v\n    }\n    fieldsToInitials (fields) {\n        let o = {};\n        for ( let field of fields ) {\n            o[field.name] = this.fieldToInitial(field);\n        }\n        return o\n    }\n    fieldToElem (field) {\n        let elem;\n        if ( field.type === 'integer' ) {\n            elem = (\n                <Field\n                    name={field.name}\n                    type=\"number\"\n                    min=\"1\"\n                    step=\"1\"\n                    pattern=\"\\d*\"\n                ></Field>\n            );\n        } else if ( field.type === 'hidden' ) {\n            elem = [];\n        } else {\n            elem = (\n                <Field\n                    name={field.name}\n                    type={field.type}\n                ></Field>\n            )\n        }\n        return [\n            (\n                <label htmlFor={field.name}>{field.label || field.name}</label>\n            ), elem\n        ];\n    }\n}","import React from \"react\";\n\nexport const TabContext = React.createContext({\n    tabs: [],\n    activeTab: null,\n});\n\nexport class Tab {\n    constructor (id, label, elem) {\n        this.id = id;\n        this.label = label;\n        this.elem = elem;\n    }\n}\n\nexport class TabProvider extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            tabs: props.tabs,\n            activeTab: props.activeTab,\n            addTab: this.addTab.bind(this),\n            switchTab: this.switchTab.bind(this),\n        };\n    }\n    addTab (id, label, elem, noSwitch) {\n        for ( let tab of this.state.tabs ) {\n            if ( tab.id == id ) {\n                this.setState({\n                    activeTab: id,\n                })\n                // TODO: maybe change label also\n                return;\n            }\n        } \n        this.setState({\n            tabs: [\n                ...this.state.tabs,\n                new Tab(id, label, elem)\n            ],\n            ...(noSwitch ? {} : { activeTab: id }),\n        });\n    }\n    switchTab (id) {\n        // TODO: maybe verify that the tab exists\n        this.setState({\n            activeTab: id,\n        });\n    }\n    render () {\n        return (\n            <TabContext.Provider value={this.state}>{this.props.children}</TabContext.Provider>\n        );\n    }\n}\n\nexport class Tabs extends React.Component {\n    render () {\n        return (\n            <div class=\"common-tabs\">\n                <TabContext.Consumer>{tabCtx => {\n                    let tabs = tabCtx.tabs.map(tab => {\n                        let cls = 'common-tab';\n                        let isActive = false;\n                        if ( tab.id == tabCtx.activeTab ) {\n                            cls += ' common-tab-active';\n                            isActive = true;\n                        }\n                        return (\n                            <button\n                                className={cls}\n                                onClick={isActive\n                                    ? () => {} : () => {\n                                        tabCtx.switchTab(tab.id);\n                                    }\n                                }\n                            >{tab.label}</button>\n                        )\n                    });\n                    return tabs;\n                }}</TabContext.Consumer>\n            </div>\n        )\n    }\n}\n\nexport class TabContentsView extends React.Component {\n    render () {\n        return (\n            <TabContext.Consumer>{tabCtx => {\n                let activeTab = tabCtx.tabs.find(\n                    tab => tab.id == tabCtx.activeTab);\n                if ( ! activeTab ) return [];\n                return activeTab.elem;\n            }}</TabContext.Consumer>\n        );\n    }\n}","import Ansi from \"ansi-to-react\";\nimport React, { useRef } from \"react\";\nimport { easyFetch, easyPost } from \"../common/comm\";\n\nexport class ServerConsole extends React.Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n            lines: [],\n            scrolling: false,\n            commandLine: '',\n        };\n        this.consoleEndRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.init();\n        this.updateScrollPosition();\n    }\n\n    componentWillUnmount() {\n        this.consoleSocket.close();\n    }\n\n    componentDidUpdate() {\n        this.updateScrollPosition();\n    }\n\n    updateScrollPosition () {\n        if ( this.state.scrolling ) return;\n        let curr = this.consoleEndRef.current;\n        if ( ! curr ) {\n            console.warn('console end not found');\n            return\n        }\n        curr.scrollIntoView({ behaviour: 'smooth' });\n    }\n    onConsoleScroll (evt) {\n        let t = evt.target;\n        let up = t.scrollHeight - t.clientHeight > t.scrollTop;\n        if ( ! up ) return;\n        this.setState({\n            scrolling: true,\n        });\n    }\n\n    async init () {\n        await this.populateBuffer();\n        this.initConsoleSocket();\n    }\n    async populateBuffer() {\n        const [error, result] = await easyFetch(\n            window.location.origin +\n            \"/instance/buffer/\" +\n            this.props.uuid\n        )\n        if ( error ) {\n            // TODO: error handle\n            alert('error');\n            console.error(result);\n            return;\n        }\n\n        this.setState({\n            lines: result,\n        })\n    }\n    initConsoleSocket () {\n        this.consoleSocket = new WebSocket(\n            `ws://${window.location.host}/instance/stream/`\n            + this.props.uuid,\n        );\n        this.consoleSocket.onmessage = evt => {\n            this.setState({\n                // Sure; react is fast, but is this okay?\n                lines: [\n                    ...this.state.lines,\n                    ...('' + evt.data).split('\\n')\n                ],\n            });\n        }\n    }\n    async onCommandEntered (evt) {\n        evt.preventDefault();\n        let cmd = this.state.commandLine;\n        const [error, result] = await easyPost(\n            window.location.origin + '/instance/command/' +\n            this.props.uuid,\n            cmd\n        )\n        if ( error ) {\n            // TODO: error handle\n            alert('error running command')\n            console.error(result);\n            return;\n        }\n        let cmdLine = `<you entered> ${cmd}`;\n        this.setState({\n            lines: [...this.state.lines, cmdLine],\n        });\n    }\n    handleCommandLine (evt) {\n        this.setState({\n            commandLine: evt.target.value,\n        });\n    }\n    render () {\n        return (\n            <div className=\"app-serverconsole\">\n                <div\n                    className=\"app-serverconsole-console\"\n                    onScroll={this.onConsoleScroll.bind(this)}\n                >\n                    { this.state.scrolling ? (\n                        <button\n                            className=\"app-serverconsole-scrollbtn\"\n                            onClick={() => {\n                                this.setState({\n                                    scrolling: false,\n                                });\n                            }}\n                        >\n                            Follow Output\n                        </button>\n                    ) : [] }\n                    {this.state.lines.map(line => (\n                        <div className=\"app-serverconsole-line\">\n                            <Ansi>{line}</Ansi>\n                        </div>\n                    ))}\n                    <div ref={this.consoleEndRef}></div>\n                </div>\n                <form\n                    className=\"app-serverconsole-entry\"\n                    onSubmit={this.onCommandEntered.bind(this)}\n                >\n                    <input\n                        name=\"cmd\"\n                        value={this.state.commandLine}\n                        onChange={this.handleCommandLine.bind(this)}\n                    />\n                    <input type=\"submit\" value=\">\" />\n                </form>\n            </div>\n        )\n    }\n}\n","import { Field, Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { easyFetch, easyPost } from \"../common/comm\";\nimport { DyformikForm } from \"../common/dyformik\";\nimport { TabContext } from \"../common/tabs\";\nimport { ServerConsole } from \"./server\";\n\nexport class NoConfig extends React.Component {\n    render () {\n        return (\n            <div class=\"app-noconfig\">\n                <h1>No configuration found!</h1>\n                <p>\n                    Click the button below to\n                    proceed in the working directory.\n                </p>\n                <input\n                    type=\"button\"\n                    value=\"Create Config\"\n                    onClick={this.props.onCreateConfig}\n                ></input>\n            </div>\n        );\n    }\n}\n\nexport class ErrorConfig extends React.Component {\n    render () {\n        return (\n            <div>\n                <h1>Error reading configuration</h1>\n                <pre>{JSON.stringify(this.props.info, null, '  ')}</pre>\n            </div>\n        );\n    }\n}\n\n// TODO: this could come from the server\nconst fields = [\n    {\n        name: 'name',\n        // TODO: default label\n        label: 'Server Name'\n    },\n    {\n        name: 'jarFile',\n        label: 'Jar File',\n    },\n    {\n        name: 'heapMin',\n        label: 'Heap (min)',\n        type: 'integer',\n        initial: 5,\n    },\n    {\n        name: 'heapMax',\n        label: 'Heap (max)',\n        type: 'integer',\n        initial: 5,\n    },\n    {\n        name: 'enableG1GC',\n        label: \"Enable G1GC\",\n        type: 'checkbox',\n        initial: true\n    }\n];\n\nexport class CreateConfig extends React.Component {\n    render () {\n        let dyf = new DyformikForm(fields);\n        dyf.onSubmit = async values => {\n            await this.props.onSubmit(values);\n        };\n        return (\n            <div className=\"app-createconfig\">\n                <h1>Create config</h1>\n                {dyf.getFormik()}\n                {/* <Formik\n                    initialValues={fieldToInitial(fields)}\n                    onSubmit={this.props.onSubmit}\n                >\n                    {({ isSubmitting }) =>\n                        this.createForm(isSubmitting)}\n                </Formik> */}\n            </div>\n        );\n    }\n}\n\nexport class LaunchConfig extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            launchDisabled: false,\n            stopDisabled: false,\n        };\n    }\n    async launch (addTab) {\n        this.setState({\n            launchDisabled: true,\n        });\n        let config = this.props.config\n        console.log('config?', config)\n        const [error, result] = await easyPost(\n            window.location.origin + \"/instance/instance/\" +\n                config.uuid,\n            {},\n        )\n        if ( error ) {\n            console.error(result);\n            alert('operation failed');\n            return;\n        }\n        this.open(addTab);\n        console.log('post instance', result);\n    }\n    async open (addTab) {\n        let config = this.props.config\n        addTab(\n            'server.' + config.uuid,\n            'Server: ' + config.values.name,\n            <ServerConsole\n                uuid={config.uuid}\n            ></ServerConsole>\n        );\n    }\n    async terminate (addTab) {\n        this.setState({\n            stopDisabled: true,\n        })\n        let config = this.props.config;\n        const [error, result] = await easyPost(\n            window.location.origin + '/instance/command/' +\n            config.uuid,\n            'stop'\n        );\n        if ( error ) {\n            alert('error stopping server');\n            console.error(result)\n        }\n    }\n    getControlsForInstance () {\n        if ( ! this.props.instance )\n            throw new Error('this should only be called if an instance exists');\n        let status = this.props.instance.status;\n\n        if ( status == 'running' ) return [\n            this.getOpenButton(),\n            this.getStopButton('Stop')\n        ];\n        if ( status == 'crashed' ) return [\n            this.getOpenButton(),\n            this.getStartButton('Restart')\n        ];\n        if ( status == 'stopped' ) return [\n            this.getOpenButton(),\n            this.getStartButton('Restart')\n        ];\n        return []\n    }\n    getStartButton (label) {\n        return (\n            <TabContext.Consumer>{tabCtx => (\n                <button\n                    className=\"btn-primary\"\n                    onClick={this.launch.bind(this, tabCtx.addTab)}\n                    disabled={this.state.launchDisabled}\n                >{label}</button>\n            )}</TabContext.Consumer>\n        );\n    }\n    getStopButton (label) {\n        return (\n            <TabContext.Consumer>{tabCtx => (\n                <button\n                    className=\"btn-primary\"\n                    onClick={this.terminate.bind(this, tabCtx.addTab)}\n                    disabled={this.state.stopDisabled}\n                >{label}</button>\n            )}</TabContext.Consumer>\n        );\n    }\n    getOpenButton () {\n        return (\n            <TabContext.Consumer>{tabCtx => (\n                <button\n                    className=\"btn-primary\"\n                    onClick={this.open.bind(this, tabCtx.addTab)}\n                >Console</button>\n            )}</TabContext.Consumer>\n        );\n    }\n    render () {\n        let config = this.props.config;\n        return (\n            <div className=\"app-listconfigs-config\">\n                <div class=\"app-listconfigs-config-title\">\n                    {config.values.name}\n                </div>\n                <div class=\"app-listconfigs-config-status\">{\n                    this.props.instance ? this.props.instance.status : 'not running'\n                }</div>\n                <div class=\"app-listconfigs-config-controls\">\n                {\n                    this.props.instance\n                        ? this.getControlsForInstance()\n                        : this.getStartButton('Launch')\n                }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport class ListConfigs extends React.Component {\n    constructor (props) {\n        super(props);\n        this.configPoller = null;\n        this.state = {\n            configs: props.configs,\n            instances: props.instances,\n            loading: true,\n        };\n    }\n    componentDidMount () {\n        this.configPoller = this.startConfigPoller();\n    }\n    componentWillUnmount () {\n        if ( this.configPoller ) clearTimeout(this.configPoller)\n    }\n    startConfigPoller () {\n        this.configPoller = setTimeout(async () => {\n            console.log('poll start');\n            let [error1, config] = await easyFetch(\n                window.location.origin + \"/config/launchers\");\n            if ( error1 ) {\n                // todo: error handle\n                console.error(config)\n                return;\n            }\n            let [error2, instances] = await easyFetch(\n                window.location.origin + \"/instance/instances\");\n            if ( error2 ) {\n                // todo: error handle\n                console.error(instances)\n                return;\n            }\n            this.setState({\n                configs: config,\n                instances: instances,\n                loading: false,\n            })\n            console.log('poll end');\n            this.startConfigPoller();\n        }, 400);\n    }\n    render () {\n        console.log('list configs render');\n        if ( this.state.loading ) return (\n            <p>Loading...</p>\n        );\n        return (\n            <div className=\"app-listconfigs\">\n                <h1>configs</h1>\n                { this.state.configs.map(config => {\n                    let instance = this.state.instances.find(\n                        v => v.uuid == config.uuid)\n                    return (\n                        <LaunchConfig\n                            config={config}\n                            instance={instance}\n                        ></LaunchConfig>\n                    );\n                }) }\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { BaseComponent, newrs } from '../common/base';\nimport { Route, RouterState } from '../common/routing';\nimport { NoConfig, ErrorConfig, CreateConfig, ListConfigs } from '../screens/config';\n\nimport '../app.sass'\nimport '../theme.sass'\nimport '../tabs.sass'\nimport { easyFetch, easyPost } from '../common/comm';\nimport { Tab, TabContentsView, TabProvider, Tabs } from '../common/tabs';\nimport Konami from 'react-konami-code';\n\nexport class App extends BaseComponent {\n    constructor (props) {\n        super(props);\n        this.state = {\n            rs: newrs('init.auth')\n        };\n    }\n\n    async checkConfig () {\n        this.setState({\n            rs: newrs('init.loading'),\n        });\n        let config = await this.doFetch(\n            window.location.origin + \"/config/launchers\");\n        if ( ! config ) return;\n\n        if ( config.length < 1 ) {\n            this.setState({\n                rs: newrs('init.no-config'),\n            });\n            return;\n        }\n\n        let instances = await this.doFetch(\n            window.location.origin + \"/instance/instances\");\n        \n        this.setState({\n            launcherConfigs: config,\n            instances: instances,\n            rs: newrs('screen.launchers'),\n        })\n    }\n\n    async openConfigCreate () {\n        this.setState({\n            rs: newrs('init.config.create'),\n        });\n    }\n\n    async onCreateConfig (values) {\n        const [error, result] = await easyPost(\n            window.location.origin + \"/config/launchers\",\n            values,\n        );\n        if ( error ) {\n            // TODO: better to report back to the form\n            //       then to set a top-level error state\n            this.setState({\n                rs: newrs('init.critical-error'),\n                errorInfo: result,\n            });\n            return;\n        }\n\n        // Unblocking async is intentional here\n        this.checkConfig();\n    }\n\n    async doFetch(url) {\n        const [error, result] = await easyFetch(url);\n        if ( error ) {\n            this.setState({\n                rs: newrs('init.critical-error'),\n                errorInfo: result\n            });\n            return null;\n        }\n        return result;\n    }\n\n    render () {\n        console.log('rendering app')\n        return (\n            <div class=\"forgetg-root\">\n                <Konami action={this.checkConfig.bind(this)}></Konami>\n                <Route rs={this.state.rs} path=\"init.auth\">\n                    please authenticate\n                </Route>\n                <Route rs={this.state.rs} path=\"init.loading\">\n                    loading\n                </Route>\n                <Route rs={this.state.rs} path=\"init.no-config\">\n                    <NoConfig onCreateConfig={this.openConfigCreate.bind(this)}></NoConfig>\n                </Route>\n                <Route rs={this.state.rs} path=\"init.config.create\">\n                    <CreateConfig onSubmit={this.onCreateConfig.bind(this)}></CreateConfig>\n                </Route>\n                <Route rs={this.state.rs} path=\"init.critical-error\">\n                    <ErrorConfig info={this.state.errorInfo}></ErrorConfig>\n                </Route>\n                <Route rs={this.state.rs} path=\"screen\">\n                    <TabProvider\n                        forceUpdateA={this.state.launcherConfigs}\n                        forceUpdateB={this.state.instances}\n                        tabs={[\n                            new Tab('screen.launchers', 'Launch Configs', (\n                                <ListConfigs\n                                    configs={this.state.launcherConfigs}\n                                    instances={this.state.instances}\n                                ></ListConfigs>\n                            )),\n                        ]}\n                        activeTab='screen.launchers'\n                    >\n                        <Tabs></Tabs>\n                        <TabContentsView></TabContentsView>\n                    </TabProvider>\n                </Route>\n            </div>\n        )\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}